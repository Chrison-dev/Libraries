name: Code Coverage Chrison.Extensions

on:
  push:
    paths: ['Chrison.Extensions/**','Chrison.Extensions.Tests/**']
  pull_request:
    paths: ['Chrison.Extensions/**','Chrison.Extensions.Tests/**']
  workflow_dispatch:

env:
  NET_VERSION: '9.x'
  RELEASE_CONFIG: Release
  PROJECT_NAME: Chrison.Extensions

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup .NET SDK ${{ env.NET_VERSION }}
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.NET_VERSION }}
        dotnet-quality: 'ga'

    - name: Install dependencies
      run: dotnet restore 

    - name: Build
      run: dotnet build --no-restore

    - name: Run tests with coverage
      run: dotnet test Chrison.Extensions.Tests/Chrison.Extensions.Tests.csproj --no-build --collect:"XPlat Code Coverage" #-p:CollectCoverage=true -p:CoverletOutputFormat=opencover
      continue-on-error: true

    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: '**/Chrison.Extensions.Tests/TestResults/**/coverage.cobertura.xml'